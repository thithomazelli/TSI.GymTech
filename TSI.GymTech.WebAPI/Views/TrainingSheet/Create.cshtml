@model TSI.GymTech.Entity.Models.TrainingSheet

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Page Heading -->
<head>
    <title>GymTech - Novo Treino</title>
</head>

@using (Html.BeginForm("Create", "TrainingSheet", FormMethod.Post, new { id = "frmTrainingSheet", name = "frmTrainingSheet" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "validation-message help-block" })
        @Html.HiddenFor(model => model.StudentId)

        <div class="edit-container">
            @*Photo and Nav buttons*@
            <div class="col-lg-3 col-md-3 col-sm-12 float-md-right float-lg-right" style="position: relative;">
                <div class="profile-sidebar">
                    <div id="myCam" class="profile-userpic-webcam" style="display: none;">
                    </div>
                    <!-- SIDEBAR USERPIC -->
                    <div id="results" class="d-none"></div>
                    <div id="myPhoto" class="profile-userpic">
                        <img id="personPhoto" src="~/Images/Sheets/bg-training.jpg" class="img-responsive">
                    </div>
                    <!-- END SIDEBAR USERPIC -->

                    <!-- SIDEBAR MENU -->
                    <nav id="navSideBar" class="navbar navbar-expand-lg navbar-light">
                        <div class="profile-usermenu sidebar-sticky">
                            <ul class="nav nav-menu flex-column">
                                <li class="nav-item active">
                                    <a href="#trainingSheet" class="nav-link" onclick="ShowOrHideSection(trainingSheet);">
                                        <i class="fa fa-home"></i>
                                        Dados Gerais
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <!-- END MENU -->
                    </nav>
                </div>
            </div>

            @*Model Properties*@
            <div class="col-lg-9 col-md-9 col-sm-12 col-md-8">
                <div class="profile-content">
                    <h5>Novo Treino</h5>
                    <hr />
                    <div class="form-row">
                        <div class="form-group col-md-6 col-sm-12">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-file-alt"></i></span>
                                </div>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "validation-message help-block" })
                        </div>

                        <div class="form-group col-md-6 col-sm-12">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-list"></i></span>
                                </div>
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "validation-message help-block" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6 col-sm-12">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-list"></i></span>
                                </div>
                                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "validation-message help-block" })
                        </div>

                        <div class="form-group col-md-6 col-sm-12">
                            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-list"></i></span>
                                </div>
                                @Html.EnumDropDownListFor(model => model.Model, htmlAttributes: new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "validation-message help-block" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6 col-sm-12">
                            @Html.LabelFor(model => model.Student, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                                </div>
                                @Html.EditorFor(model => model.Student.Name, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                <span class="input-group-append">
                                    <button class="input-group-text btn btn-primary btn-dataTable-fixMargin select-student-trainingsheet" type="button">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.Student, "", new { @class = "validation-message help-block" })
                        </div>

                        <div class="form-group col-md-6 col-sm-12">
                            @Html.LabelFor(model => model.Revaluation, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                </div>
                                @Html.EditorFor(model => model.Revaluation, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Revaluation, "", new { @class = "validation-message help-block" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6 col-sm-12">
                            @Html.LabelFor(model => model.Cycle, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-align-justify"></i></span>
                                </div>
                                @Html.EditorFor(model => model.Cycle, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Cycle, "", new { @class = "validation-message help-block" })
                        </div>

                        <div class="form-group col-md-6 col-sm-12">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-list"></i></span>
                                </div>
                                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "validation-message help-block" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "validation-message help-block" })
                    </div>
                </div>

                @*Buttons*@
                <section class="profile-content">
                    <div class="form-row">
                        <div class="col-6 mt-2">
                            @Html.ActionLink("Voltar para Lista de Modelo de Treinos", "Index")
                        </div>
                        <div class="col-6 text-right">
                            <button id="btnSaveTrainingSheet" onclick="return false;" class="btn btn-success align-content-end" type="submit">Salvar</button>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
}

@*Modal popup*@
<div class="modal" id="modal">
    @Html.Hidden("modalIsLoad", false)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<!-- Utility library -->
<script src="@Url.Content("~/Scripts/Utility/TrainingSheetUtility.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/UtilityHelper.js")" type="text/javascript"></script>