@model TSI.GymTech.Entity.Models.Person

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <title>GymTech - @Model.Name</title>
</head>

@using (Html.BeginForm("Edit", "Student", FormMethod.Post, new { id = "frmStudent", name = "frmStudent", @class = "needs-validation" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "help-block" })
        @Html.HiddenFor(model => model.PersonId)
        @Html.HiddenFor(model => model.Photo)

        <div class="edit-container">
            @*Photo and Nav buttons*@
            <div class="col-lg-3 col-md-3 col-sm-12 float-md-right float-lg-right" style="position: relative;">
                <div class="profile-sidebar">
                    <div id="myCam" class="profile-userpic-webcam" style="display: none;">
                    </div>
                    <!-- SIDEBAR USERPIC -->
                    <div id="results" class="d-none"></div>
                    <div id="myPhoto" class="profile-userpic">
                        @{
                            var fileName = Model.Photo;
                            var sourceImage = "~/Images/Persons/";
                            var absolutePath = System.Web.HttpContext.Current.Server.MapPath("~/Images/Persons/" + fileName);

                            if (!System.IO.File.Exists(absolutePath) || string.IsNullOrEmpty(fileName))
                            {
                                fileName = "default-user-profile.svg";
                            }

                            sourceImage += fileName;

                            var resetWebcamFunc = "reset_webcam('" + fileName + "')";
                        }
                        <img id="personPhoto" src="@Href(sourceImage)" class="img-responsive">
                    </div>
                    <!-- END SIDEBAR USERPIC -->
                    <!-- SIDEBAR USER TITLE -->
                    <div class="profile-usertitle">
                        <div class="profile-usertitle-name">
                            @Model.Name
                        </div>
                        <div class="profile-usertitle-job">
                            @Html.LabelFor(model => model.PersonId): @Model.PersonId <br />
                            @typeof(TSI.GymTech.Entity.App_LocalResources.PersonType).GetProperty(Enum.GetName(typeof(TSI.GymTech.Entity.Enumerates.PersonType), Model.ProfileType)).GetValue(null)
                        </div>
                    </div>

                    <div id="pre_take_buttons" class="profile-userbuttons">
                        <button id="btnAdd" type="button" class="btn btn-dark btn-md" onClick="setup(); $(this).hide();">
                            <i class="fas fa-video fa-2x"></i>
                        </button>
                        <div id="btnUploadPicture" class="btn btn-success btn-file">
                            <i class="fas fa-images  fa-2x"></i>
                            <input id="btnUpload" type="file">
                        </div>
                        <button id="btnRemovePhoto" type="button" class="btn btn-danger btn-sm" style="display:@(sourceImage.IndexOf("default-user-profile.svg") <= 0 ? "" : "none")">
                            <i class="fas fa-trash-alt fa-2x"></i>
                        </button>

                        <button id="btnTakePicture" type="button" class="btn btn-dark btn-lg" style="display:none" onClick="preview_snapshot()">
                            <i class="fas fa-camera-retro fa-2x"></i>
                        </button>
                        <button id="btnResetWebcam" type="button" class="btn btn-danger btn-lg" style="display:none" onClick="@resetWebcamFunc">
                            <i class="fas fa-video-slash fa-2x"></i>
                        </button>
                    </div>
                    <div id="post_take_buttons" class="profile-userbuttons" style="display:none">
                        <button id="btnTakeAnother" type="button" class="btn btn-dark btn-lg" onClick="cancel_preview()">
                            <i class="fas fa-undo-alt fa-2x"></i>
                        </button>
                        <button id="btnSavePhoto" type="button" class="btn btn-success btn-lg" onClick="save_photo()">
                            <i class="far fa-save fa-2x"></i>
                        </button>
                        <button type="button" class="btn btn-danger btn-lg" onClick="@resetWebcamFunc">
                            <i class="fas fa-video-slash fa-2x"></i>
                        </button>
                    </div>

                    <!-- SIDEBAR MENU -->
                    <nav id="navSideBar" class="navbar navbar-expand-lg navbar-light">
                        <div class="profile-usermenu sidebar-sticky">
                            <ul class="nav nav-menu flex-column">
                                @*<li class="nav-item">
                                        <a href="#" class="nav-link ">
                                            <i class="fa fa-home"></i>
                                            Geral
                                        </a>
                                    </li>*@
                                <li class="nav-item active">
                                    <a href="#personalData" class="nav-link" onclick="ShowOrHideSection(personalData);">
                                        <i class="fa fa-user"></i>
                                        @*Profile Information*@
                                        Dados Pessoais
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a href="#addressList" class="nav-link" onclick="ShowOrHideSection(addressList);">
                                        <i class="fas fa-map-marked-alt"></i>
                                        @*Profile Information*@
                                        Endereços
                                    </a>
                                </li>
                                @*<li class="nav-item">
                                        <a class="nav-link" href="#">
                                            <i class="fas fa-shopping-cart"></i>
                                            Payments
                                            Pagamentos
                                        </a>
                                    </li>*@
                                <li class="nav-item">
                                    <a href="#trainingSheetList" class="nav-link" onclick="ShowOrHideSection(trainingSheetList);">
                                        <i class="fas fa-file-alt"></i>
                                        @*Training Sheet*@
                                        Fichas de Treino
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#evaluationSheetList" onclick="ShowOrHideSection(evaluationSheetList);">
                                        <i class="fas fa-file-contract"></i>
                                        @*Evaluation Sheet*@
                                        Avaliações Físicas
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a href="#accessLogList" class="nav-link" onclick="ShowOrHideSection(accessLogList);">
                                        <i class="fas fa-history"></i>
                                        @*Log Access*@
                                        Log de Acesso
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <!-- END MENU -->
                    </nav>
                </div>
            </div>

            @*Fields and Grid views*@
            <div class="col-lg-9 col-md-9 col-sm-12 col-md-8">
                @*Personal Data*@
                <section id="personalData">
                    <div class="profile-content">
                        <h5>Dados Pessoais</h5>
                        <hr />
                        <div class="form-row">
                            <div class="form-group col-12">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-user"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } }) <br />
                                </div>
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "validation-message help-block" })
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.ProfileType, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-list"></i></span>
                                    </div>
                                    @Html.EnumDropDownListFor(model => model.ProfileType, htmlAttributes: new { @class = "form-control", required = "required" })
                                </div>
                                @Html.ValidationMessageFor(model => model.ProfileType, "", new { @class = "validation-message help-block" })
                            </div>

                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-list"></i></span>
                                    </div>
                                    @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "validation-message help-block" })
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.NationalIDCard, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-address-card"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.NationalIDCard, new { htmlAttributes = new { @class = "form-control" } })
                                    <div class="invalid-feedback ">

                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.NationalIDCard, "", new { @class = "validation-message help-block" })
                            </div>
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.SocialSecurityCard, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-id-badge"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.SocialSecurityCard, new { htmlAttributes = new { @class = "input-validation-error form-control", required = "required" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.SocialSecurityCard, "", new { @class = "validation-message help-block" })
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "validation-message help-block" })
                            </div>
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.RegistrationDate, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.RegistrationDate, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.RegistrationDate, "", new { @class = "validation-message help-block" })
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "validation-message help-block" })
                            </div>
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-list"></i></span>
                                    </div>
                                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "validation-message help-block" })
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "validation-message help-block" })
                            </div>
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.MobilePhone, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-mobile"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.MobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "validation-message help-block" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                </div>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "validation-message help-block" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "validation-message help-block" })
                        </div>
                    </div>
                </section>

                @*Address List*@
                <section id="addressList" style="display: none;">
                    <div class="card shadow mb-4">
                        <div class="card-body">
                            <div class="col-12 text-right">
                                <h5 style="float:left">Endereços</h5>
                                <a href="" onclick="AddNewAddress(this, 'Student'); return false;" data-id="@Model.PersonId"
                                   class="d-sm-inline-block btn btn-success align-content-end btn-sm btn-labeled shadow-sm mb-1">
                                    <span class="btn-label">Novo Endereço</span>
                                </a>
                            </div>
                            <hr />
                            <table class="stripe row-border" width="100%" id="tblAddresses" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.LabelFor(model => model.Addresses.FirstOrDefault().Street, htmlAttributes: new { @class = "control-label col-md-12" })
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.Addresses.FirstOrDefault().Number, htmlAttributes: new { @class = "control-label col-md-12" })
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.Addresses.FirstOrDefault().AddressType, htmlAttributes: new { @class = "control-label col-md-12" })
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.Addresses.FirstOrDefault().District, htmlAttributes: new { @class = "control-label col-md-12" })
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.Addresses.FirstOrDefault().City, htmlAttributes: new { @class = "control-label col-md-12" })
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.Addresses.FirstOrDefault().State, htmlAttributes: new { @class = "control-label col-md-12" })
                                        </th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Addresses)
                                    {
                                        <tr id="@item.AddressId">
                                            <td>
                                                @if (item.Street != null)
                                                {
                                                    @Html.ActionLink(item.Street, null, null, new
                                               {
                                                   onclick = "EditAddress(this, 'Student'); return false;",
                                                   data_id = item.AddressId
                                               })
                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Number)
                                            </td>
                                            <td>
                                                @if (item.AddressType != null)
                                                {
                                                    <span>@typeof(TSI.GymTech.Entity.App_LocalResources.AddressType).GetProperty(Enum.GetName(typeof(TSI.GymTech.Entity.Enumerates.AddressType), item.AddressType)).GetValue(null)</span>
                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.District)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.City)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.State)
                                            </td>
                                            <td>
                                                <a href="" onclick="EditAddress(this, 'Student'); return false;" data-id="@item.AddressId">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            </td>
                                            <td>
                                                <a href="#" onClick="DeleteAddress('@item.AddressId', 'tblAddresses', 'Student');">
                                                    <i style="color: red;" class="fas fa-trash-alt"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </section>

                @*Training Sheet List*@
                <section id="trainingSheetList" style="display: none;">
                    <div class="card shadow mb-4">
                        <div class="card-body">
                            <div class="col-12 text-right">
                                <h5 style="float:left">Treinos</h5>
                                @*@Html.ActionLink("Novo Treino", "Create", "TrainingSheet", new { personId = Model.PersonId }, new { @class = "btn btn-success align-content-end" })*@

                                <a href="" id="copy-trainingsheet" data-id="@Model.PersonId"
                                   class="d-sm-inline-block btn btn-primary align-content-end btn-sm btn-labeled shadow-sm mb-1">
                                    <i class="fas fa-copy"></i>
                                    <span class="btn-label">Copiar</span>
                                </a>
                                <a href=@Url.Action("Create", "TrainingSheet", new { personId = Model.PersonId })
                                   class="d-sm-inline-block btn btn-success align-content-end btn-sm btn-labeled shadow-sm mb-1">
                                    <i class="fas fa-file-alt text-white-35"></i>
                                    <span class="btn-label">Novo</span>
                                </a>
                            </div>
                            <hr />
                            <table class="stripe row-border" id="tblTrainingSheet" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.DisplayNameFor(model => Model.TrainingSheets.FirstOrDefault().Name)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => Model.TrainingSheets.FirstOrDefault().Cycle)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => Model.TrainingSheets.FirstOrDefault().Model)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => Model.TrainingSheets.FirstOrDefault().Status)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => Model.TrainingSheets.FirstOrDefault().Type)
                                        </th>
                                        <th></th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.TrainingSheets)
                                    {
                                        <tr id="@item.TrainingSheetId">
                                            <td>
                                                @Html.ActionLink(item.Name, "Edit", "TrainingSheet", new { id = item.TrainingSheetId }, null)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Cycle)
                                            </td>
                                            <td>
                                                @typeof(TSI.GymTech.Entity.App_LocalResources.TrainingSheetModel).GetProperty(Enum.GetName(typeof(TSI.GymTech.Entity.Enumerates.TrainingSheetModel), item.Model)).GetValue(null)
                                            </td>
                                            <td>
                                                @if (item.Status != null)
                                                {
                                                    <span>@typeof(TSI.GymTech.Entity.App_LocalResources.TrainingSheetStatus).GetProperty(Enum.GetName(typeof(TSI.GymTech.Entity.Enumerates.TrainingSheetStatus), item.Status)).GetValue(null)</span>
                                                }
                                            </td>
                                            <td>
                                                <span>@typeof(TSI.GymTech.Entity.App_LocalResources.TrainingSheetType).GetProperty(Enum.GetName(typeof(TSI.GymTech.Entity.Enumerates.TrainingSheetType), item.Type)).GetValue(null)</span>
                                            </td>
                                            <td>
                                                <a href="" onclick="PrintTrainingSheet(this, 'TrainingSheet', 'Student'); return false;" data-id="@item.TrainingSheetId">
                                                    <i class="fas fa-print"></i>
                                                </a>
                                            </td>
                                            <td>
                                                <a href=@Url.Action("Edit", "TrainingSheet", new { id = item.TrainingSheetId })>
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            </td>
                                            <td>
                                                <a href="#" onClick="DeleteTrainingSheet('@item.TrainingSheetId', '@item.Name', 'tblTrainingSheet');">
                                                    <i style="color: red;" class="fas fa-trash-alt"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </section>

                @*Evaluation Sheet*@
                <section id="evaluationSheetList" style="display: none;">
                    <div class="card shadow mb-4">
                        <div class="card-body">
                            <div class="col-12 text-right">
                                <h5 style="float:left">Avaliações  Físicas</h5>
                                <a href=@Url.Action("Create", "EvaluationSheet", new { personId = Model.PersonId })
                                   class="d-sm-inline-block btn btn-success align-content-end btn-sm btn-labeled shadow-sm mb-1">
                                    <i class="fas fa-file-contract text-white-35"></i>
                                    <span class="btn-label">Novo</span>
                                </a>
                            </div>
                            <hr />
                            <table class="stripe row-border" id="tblEvaluationSheets" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.DisplayNameFor(model => model.EvaluationSheets.FirstOrDefault().Description)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.EvaluationSheets.FirstOrDefault().Revaluation)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.EvaluationSheets.FirstOrDefault().Comments)
                                        </th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.EvaluationSheets)
                                    {
                                        <tr>
                                            <td>
                                                @Html.ActionLink(item.Description, "Edit", "EvaluationSheet", new { id = item.EvaluationSheetId }, null)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Revaluation)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Comments)
                                            </td>
                                            <td>
                                                <a href=@Url.Action("Edit", "EvaluationSheet", new { id = item.EvaluationSheetId })>
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            </td>
                                            <td>
                                                <a href=@Url.Action("Delete", "EvaluationSheet", new { id = item.EvaluationSheetId })>
                                                    <i style="color: red;" class="fas fa-trash-alt"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </section>

                @*Log Access List*@
                <section id="accessLogList" style="display: none;">
                    <div class="card shadow mb-4">
                        <div class="card-body">
                            <div class="col-12 text-right">
                                <h5 style="float:left">Log de Acesso</h5>
                            </div>
                            <hr class="hr-fixMargin" />
                            <table class="stripe row-border" id="tblAccessLogs" style="width:100%" ellspacing="0">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.DisplayNameFor(model => model.AccessLogs.FirstOrDefault().AccessControl.Name)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.AccessLogs.FirstOrDefault().AccessType)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.AccessLogs.FirstOrDefault().MessageDisplayed)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.AccessLogs.FirstOrDefault().CreateDate)
                                        </th>
                                        @*<th></th>*@
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.AccessLogs)
                                    {
                                        <tr id="@item.AccessLogId">
                                            <td>
                                                @Html.DisplayFor(modelItem => item.AccessControl.Name)
                                            </td>
                                            <td>
                                                @typeof(TSI.GymTech.Entity.App_LocalResources.GateStatusType).GetProperty(Enum.GetName(typeof(TSI.GymTech.Entity.Enumerates.GateStatusType), item.AccessType)).GetValue(null)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.MessageDisplayed)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.CreateDate)
                                            </td>
                                            @*<td>
                                                <a href=@Url.Action("Edit", "AccessLog", new { id = item.AccessLogId })>
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            </td>*@
                                            <td>
                                                <a href="#" onClick="DeleteAccessLog('@item.AccessLogId', 'tblAccessLogs', 'Student');">
                                                    <i style="color: red;" class="fas fa-trash-alt"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </section>

                @*Buttons*@
                <section id="buttons" class="profile-content">
                    <div class="form-row">
                        <div class="col-6 mt-2">
                            @Html.ActionLink("Voltar para Lista de Alunos", "Index")
                        </div>
                        <div class="col-6 text-right">
                            <button id="btnSaveStudent" onclick="return false;" class="btn btn-success align-content-end" type="submit">Salvar</button>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
}

@*Modal Training popup*@
<div class="modal" id="modalTraining">
    @Html.Hidden("modalTrainingIsLoad", false)
</div>

@*Modal Address popup*@
<div class="modal" id="modalAddress">

</div>

@*Modal TrainingSheetPrint popup*@
<div class="modal" id="modal-print">

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        // Enabled filters and buttons to datatable
        $(document).ready(function () {
            LoadSimpleDataTable(tblAddresses, 'Student');
            LoadDataTableButtonsAndFilter(tblTrainingSheet, null, 'Student');
            LoadDataTableButtonsAndFilter(tblEvaluationSheets, null, 'Student');
            LoadAccessLogListWithPaging(null, 3, tblAccessLogs, 'Student');
        });
    </script>
}

<!-- Utility library -->
<script src="@Url.Content("~/Scripts/Utility/StudentUtility.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/AddressUtility.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/TrainingSheetUtility.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/EvaluationSheetUtility.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/AccessLogUtility.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/UtilityHelper.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/PersonUtility.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/PrinterUtility.js")" type="text/javascript"></script>

@*DataTable DateTime library*@
<script src="@Url.Content("~/Content/vendor/datatables/moment.min.js")"></script>
<script src="@Url.Content("~/Content/vendor/datatables/datetime-moment.js")"></script>

<!-- WebcamJS library -->
<script src="@Url.Content("~/Scripts/WebCam/webcam.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/WebCamUtility.js")" type="text/javascript"></script>