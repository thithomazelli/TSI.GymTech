@model TSI.GymTech.Entity.Models.Address

@{
    ViewBag.Title = "Create";
    Layout = null;
}

<div class="modal-dialog">
    <div class="modal-content">
        @using (Html.BeginForm("Edit", "Address", FormMethod.Post, new { id = "frmAddress", name = "frmAddress" }))
        {
            @Html.AntiForgeryToken()
            <div class="modal-header">
                <h4 class="modal-title">Editar Endereço</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "validation-message text-danger" })
            @Html.HiddenFor(model => model.AddressId)
            @Html.HiddenFor(model => model.PersonId)
            
            <div class="modal-body">
                <div class="form-row">
                    <div class="form-group col-md-6 col-sm-12">
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="input-group col-12">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-map-marked-alt"></i></span>
                            </div>
                            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-append">
                                <button id="searchPostalCode" class="input-group-text btn btn-primary btn-dataTable-fixMargin" type="button">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "validation-message text-danger" })
                    </div>

                    <div class="form-group col-md-6 col-sm-12">
                        @Html.LabelFor(model => model.AddressType, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="input-group col-md-12">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-home"></i></span>
                            </div>
                            @Html.EnumDropDownListFor(model => model.AddressType, htmlAttributes: new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.AddressType, "", new { @class = "validation-message text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="input-group col-12">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-align-justify"></i></span>
                            </div>
                            @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Street, "", new { @class = "validation-message text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 col-sm-12">
                        @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="input-group col-12">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-sort-numeric-up"></i></span>
                            </div>
                            @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Number, "", new { @class = "validation-message text-danger" })
                    </div>

                    <div class="form-group col-md-6 col-sm-12">
                        @Html.LabelFor(model => model.District, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="input-group col-12">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-align-justify"></i></span>
                            </div>
                            @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.District, "", new { @class = "validation-message text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 col-sm-12">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="input-group col-12">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-city"></i></span>
                            </div>
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "validation-message text-danger" })
                    </div>

                    <div class="form-group col-md-6 col-sm-12">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="input-group col-12">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-align-justify"></i></span>
                            </div>
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "validation-message text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-6 col-sm-12">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="input-group col-12">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-globe-asia"></i></span>
                            </div>
                            @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "validation-message text-danger" })
                    </div>

                    <div class="form-group col-md-6 col-sm-12">
                        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="input-group col-12">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-align-justify"></i></span>
                            </div>
                            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "validation-message text-danger" })
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <input type="submit" value="Salvar" class="btn btn-success" />
                <input type="button" value="Cancelar" class="btn btn-danger" data-dismiss="modal" />
            </div>
        }

    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->

<!-- Utility library -->
<script src="@Url.Content("~/Scripts/Utility/AddressUtility.js")" type="text/javascript"></script>
