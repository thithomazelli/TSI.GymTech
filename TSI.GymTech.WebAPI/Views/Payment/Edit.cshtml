@model TSI.GymTech.Entity.Models.Payment

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <title>GymTech - Pagamento</title>
</head>

@using (Html.BeginForm("Edit", "Payment", FormMethod.Post, new { id = "frmPayment", name = "frmPayment", @class = "needs-validation" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "help-block" })
        @Html.HiddenFor(model => model.PaymentId)
        @Html.HiddenFor(model => model.StudentId)

        <div class="edit-container">
            @*Photo and Nav buttons*@
            <div class="col-lg-3 col-md-3 col-sm-12 float-md-right float-lg-right" style="position: relative;">
                <div class="profile-sidebar">
                    <div id="myCam" class="profile-userpic-webcam" style="display: none;">
                    </div>
                    <!-- SIDEBAR USERPIC -->
                    <div id="results" class="d-none"></div>
                    <div id="myPhoto" class="profile-userpic">
                        <img id="personPhoto" src="~/Images/Payments/bg-payment-02.jpg" class="img-responsive">
                    </div>
                    <!-- END SIDEBAR USERPIC -->
                    <!-- SIDEBAR USER TITLE -->
                    <div class="payment-details">
                        <div class="payment-description">
                            @Model.Description
                        </div>
                        <div class="payment-infos">
                            @{
                                var totalPriceFormated = Model.TotalPrice.ToString("C");
                            }
                            @Html.LabelFor(model => model.TotalPrice): <span id="totalPriceFormated">@totalPriceFormated</span>
                        </div>
                        <div class="payment-infos">
                            @typeof(TSI.GymTech.Entity.App_LocalResources.PaymentStatus).GetProperty(Enum.GetName(typeof(TSI.GymTech.Entity.Enumerates.PaymentStatus), Model.Status)).GetValue(null)
                        </div>
                    </div>

                    <!-- SIDEBAR MENU -->
                    <nav id="navSideBar" class="navbar navbar-expand-lg navbar-light">
                        <div class="profile-usermenu sidebar-sticky">
                            <ul class="nav nav-menu flex-column">
                                <li class="nav-item active">
                                    <a href="#payment" class="nav-link" onclick="ShowOrHideSection(payment);">
                                        <i class="fa fa-home"></i>
                                        Dados Gerais
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a href="#productList" class="nav-link" onclick="ShowOrHideSection(productList);">
                                        <i class="fab fa-product-hunt"></i>
                                        Produtos
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </nav>
                    <!-- END MENU -->
                </div>
            </div>

            @*Model Properties*@
            <div class="col-lg-9 col-md-9 col-sm-12 col-md-8">
                <section id="payment">
                    <div class="profile-content">
                        <h5>Novo Pagamento</h5>
                        <hr />
                        <div class="form-row">
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-user"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "validation-message help-block" })
                            </div>
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.Student, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-user"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.Student.Name, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                    <span class="input-group-append">
                                        <button class="input-group-text btn btn-primary btn-dataTable-fixMargin select-student-payment" type="button">
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.Student, "", new { @class = "validation-message help-block" })
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-list"></i></span>
                                    </div>
                                    @Html.EnumDropDownListFor(model => model.PaymentType, htmlAttributes: new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "validation-message help-block" })
                            </div>
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-list"></i></span>
                                    </div>
                                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "validation-message help-block" })
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.DatePaymentEstimated, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.DatePaymentEstimated, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.DatePaymentEstimated, "", new { @class = "validation-message help-block" })
                            </div>
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.DatePaymentCompleted, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.DatePaymentCompleted, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.DatePaymentCompleted, "", new { @class = "validation-message help-block" })
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control update-payment-prices" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "validation-message help-block" })
                            </div>


                            <div class="form-group col-md-6 col-sm-12">
                                @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="input-group col-md-12">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-dollar-sign"></i></span>
                                    </div>
                                    @Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { @class = "form-control update-payment-prices", id = "PaymentTotalPrice" , required = "required" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "validation-message help-block"})
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "validation-message help-block" })
                        </div>
                    </div>
                </section>

                <section id="productList" style="display: none;">
                    <div class="card shadow mb-4">
                        <div class="card-body">
                            <div class="col-12 text-right">
                                <h5 style="float:left">Produtos</h5>
                                <button data-id="@Model.PaymentId" type="submit" class="btn btn-success create-payment-product">
                                    <i class="fab fa-product-hunt"></i>
                                    <span>Novo Produto</span>
                                </button>
                            </div>
                            <hr />
                            <table class="stripe row-border" id="tblPaymentProducts" style="width:100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.LabelFor(model => model.PaymentProducts.FirstOrDefault().Description, htmlAttributes: new { @class = "control-label col-md-12" })
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.PaymentProducts.FirstOrDefault().Status, htmlAttributes: new { @class = "control-label col-md-12" })
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.PaymentProducts.FirstOrDefault().Discount, htmlAttributes: new { @class = "control-label col-md-12" })
                                        </th>
                                        <th>
                                            @Html.LabelFor(model => model.PaymentProducts.FirstOrDefault().TotalPrice, htmlAttributes: new { @class = "control-label col-md-12" })
                                        </th>
                                        <th></th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.PaymentProducts)
                                    {
                                    <tr id="@item.PaymentProductId">
                                        <td>
                                            @if (item.Description != null)
                                            {
                                                @Html.ActionLink(item.Description, null, null,
                                                    new
                                                    {
                                                        onclick = "EditPaymentProduct(this); return false;",
                                                        data_id = item.PaymentProductId
                                                    })
                                            }
                                        </td>
                                        <td>
                                            @typeof(TSI.GymTech.Entity.App_LocalResources.PaymentStatus).GetProperty(Enum.GetName(typeof(TSI.GymTech.Entity.Enumerates.PaymentStatus), item.Status)).GetValue(null)
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Discount)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.TotalPrice)
                                        </td>
                                        <td>
                                            <a href="#" onClick="EditPaymentProduct(this);" data-id="@item.PaymentProductId">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        </td>
                                        <td>
                                            <a href="#" onClick="DeletePaymentProduct('@item.PaymentProductId', 'tblPaymentProducts', 'Payment');">
                                                <i style="color: red;" class="fas fa-trash-alt"></i>
                                            </a>
                                        </td>
                                    </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </section>

                @*Buttons*@
                <section id="buttons" class="profile-content">
                    <div class="form-row">
                        <div class="col-6 mt-2">
                            @Html.ActionLink("Voltar para Lista de Pagamentos", "Index")
                        </div>
                        <div class="col-6 text-right">
                            <button id="btnSavePayment" onclick="return false;" class="btn btn-success align-content-end" type="submit">Salvar</button>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
}

@*Modal popup*@
<div class="modal" id="modal">
    @Html.Hidden("modalIsLoad", false)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            // Enabled filters and buttons to datatable
            LoadDataTableButtonsAndFilter(tblPaymentProducts, false, 'Payment');
        });
    </script>
}

<!-- Utility library -->
<script src="@Url.Content("~/Scripts/Utility/PaymentUtility.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/PaymentProductUtility.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/UtilityHelper.js")" type="text/javascript"></script>