@model TSI.GymTech.Entity.Models.Exercise

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Page Heading -->
<head>
    <title>GymTech - Novo Exercício</title>
</head>

@using (Html.BeginForm("Create", "Exercise", FormMethod.Post, new { id = "frmExercise", name = "frmExercise" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="edit-container">
            @*Fields and Grid views*@
            <div class="col-lg-9 col-md-9 col-sm-12 col-md-8">
                <div class="profile-content">
                    <h5>Novo Exercício</h5>
                    <hr />
                    <div class="form-row">
                        <div class="form-group col-12">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-dumbbell"></i></span>
                                </div>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "validation-message help-block" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-12">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-align-justify"></i></span>
                                </div>
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "validation-message help-block" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6 col-sm-12">
                            @Html.LabelFor(model => model.MuscleWorked, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-align-justify"></i></span>
                                </div>
                                @Html.EditorFor(model => model.MuscleWorked, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.MuscleWorked, "", new { @class = "validation-message help-block" })
                        </div>

                        <div class="form-group col-md-6 col-sm-12">
                            @Html.LabelFor(model => model.MuscularGroup, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="input-group col-md-12">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fas fa-list"></i></span>
                                </div>
                                @Html.EnumDropDownListFor(model => model.MuscularGroup, htmlAttributes: new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.MuscularGroup, "", new { @class = "validation-message help-block" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-12">
                            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="input-group col-md-12">
                                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "validation-message help-block" })
                        </div>
                    </div>
                </div>

                @*Buttons*@
                <section class="profile-content">
                    <div class="form-row">
                        <div class="col-6 mt-2">
                            @Html.ActionLink("Voltar para Lista de Exercícios", "Index")
                        </div>
                        <div class="col-6 text-right">
                            <input id="btnSaveExercise" type="submit" value="Salvar" class="btn btn-success align-content-end" />
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<!-- Utility library -->
<script src="@Url.Content("~/Scripts/Utility/ExerciseUtility.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Utility/UtilityHelper.js")" type="text/javascript"></script>
